package fsd.msservice.transaction.api.entity;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Transaction history that was purchased.
 * 
 * @author LinChaoYang
 *
 */
@Data
@NoArgsConstructor
@Entity
@Table(name = "transaction")
@EntityListeners(AuditingEntityListener.class) // automaticlly complete created time and updated time
// @GenericGenerator(name = "idGenerator", strategy =
// "org.hibernate.id.UUIDGenerator" )
public class TransactionEntity {

	/**
	 * Product id which is generated by database
	 */
	@Id
	@Column(name = "ID", length = 64)
	@GenericGenerator(name = "idGenerator", strategy = "uuid2")
	@GeneratedValue(generator = "idGenerator")
	private String id;

	/**
	 * Buyer id
	 */
	@Column(name = "buyer_id", columnDefinition = "varchar(64) not null comment 'buyer id'")
	private String buyerId;

	/**
	 * Buyer name
	 */
	@Column(name = "buyer_name", columnDefinition = "varchar(200) not null comment 'buyer name'")
	private String buyerName;

	/**
	 * email
	 */
	@Column(name = "email", columnDefinition = "varchar(30) not null comment 'email'")
	private String email;

	/**
	 * mobile
	 */
	@Column(name = "mobile", columnDefinition = "varchar(22) not null comment 'mobile'")
	private String mobile;

	/**
	 * Transaction total money
	 */
	@Column(name = "total_amount", columnDefinition = "DECIMAL(7,2) not null comment 'total money amount'")
	// @Digits(integer=5, fraction=2)
	private BigDecimal totalAmount;

	/**
	 * Total tax for this transaction
	 */
	@Column(name = "total_tax", columnDefinition = "DECIMAL(7,2) not null comment 'total tax'")
	private BigDecimal totalTax;

	/**
	 * Discount code to be used in this transaction
	 */
	@Column(name = "discount_code", columnDefinition = "varchar(64) not null comment 'discount code'")
	private String discountCode;

	/**
	 * Discount code to be used in this transaction
	 */
	@Column(name = "status", columnDefinition = "char(1) not null comment '0: normal; 1: deleted by buyer'")
	private String status;

	/**
	 * Remark
	 */
	@Column(name = "remarks", columnDefinition = "varchar(100) comment 'remarks'")
	private String remarks;

	/**
	 * Created time
	 */
	@CreatedDate
	@Column(name = "created_date", updatable = false)
	@JsonIgnore // Ignore this field when generate to Json
	private Date created;

	/**
	 * Updated time
	 */
	@LastModifiedDate
	@Column(name = "updated_date")
	private Date updated;

	@OneToMany(cascade = { CascadeType.REFRESH, CascadeType.MERGE }, mappedBy = "transaction", fetch = FetchType.EAGER)
	private List<TransactionDetailEntity> details;

}