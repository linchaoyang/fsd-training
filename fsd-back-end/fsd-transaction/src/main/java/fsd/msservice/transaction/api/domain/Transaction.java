package fsd.msservice.transaction.api.domain;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

import org.hibernate.annotations.GenericGenerator;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@Entity
@Table(name = "transaction")
@EntityListeners(AuditingEntityListener.class) // automaticlly complete created time and updated time
// @GenericGenerator(name = "idGenerator", strategy =
// "org.hibernate.id.UUIDGenerator" )
public class Transaction {

    /**
     * product id which is generated by database
     */
    @Id
    @Column(name = "ID", length = 64)
    @GenericGenerator(name = "idGenerator", strategy = "uuid2")
    @GeneratedValue(generator = "idGenerator")
    private String id;

    /**
     * category id
     */
    @Column(name = "buyer_id", columnDefinition = "varchar(64) not null comment 'buyer id'")
    private String buyerId;

    @Transient
    private String buyerName;

    @Column(name = "seller_id", columnDefinition = "varchar(64) not null comment 'seller id'")
    private String sellerId;

    @Transient
    private String sellerName;

    /**
     * product price
     */
    @Column(name = "total_amount", columnDefinition = "DECIMAL(7,2) not null comment 'total amount'")
    // @Digits(integer=5, fraction=2)
    private BigDecimal totalAmount;

    @Column(name = "discount_code", columnDefinition = "varchar(64) not null comment 'discount code'")
    private String discountCode;

    /**
     * Remark
     */
    @Column(name = "remarks", columnDefinition = "varchar(100) comment 'remarks'")
    private String remarks;

    /**
     * Created time
     */
    @CreatedDate
    @Column(name = "created_date", updatable = false)
    @JsonIgnore // Ignore this field when generate to Json
    private Date created;

    /**
     * Updated time
     */
    @LastModifiedDate
    @Column(name = "updated_date")
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private Date updated;

    @OneToMany(cascade = { CascadeType.REFRESH, CascadeType.MERGE }, mappedBy = "detail", fetch = FetchType.EAGER) //
    private List<TransactionDetail> carousels;

}