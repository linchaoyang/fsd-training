package fsd.msservice.product.api.domain;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

import org.hibernate.annotations.GenericGenerator;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@Entity
@Table(name="product")
@EntityListeners(AuditingEntityListener.class) // automaticlly complete created time and updated time
//@GenericGenerator(name = "idGenerator", strategy = "org.hibernate.id.UUIDGenerator" )
public class Product {

    /**
     * product id which is generated by database
     */
    @Id
    @Column(name = "ID", length = 64)
    @GenericGenerator(name = "idGenerator", strategy = "uuid2")
    @GeneratedValue(generator = "idGenerator")
    private String id;

    /**
     * category id
     */
    @Column(name = "category_id", columnDefinition = "varchar(64) not null comment 'category id'")
    private String categoryId;

    @Transient
    private String categoryName;

    /**
     * subcatetory id
     */
    @Column(name = "subcategory_id", columnDefinition = "varchar(64) not null comment 'subcategory id'")
    private String subcategoryId;

    /**
     * seller id
     */
    @Column(name = "seller_id", columnDefinition = "varchar(64) not null comment 'seller id'")
    private String sellerId;

    @Transient
    private String sellerName;

    /**
     * product price
     */
    @Column(name = "price", columnDefinition = "DECIMAL(7,2) not null comment 'product price'")
    @Digits(integer=5, fraction=2)
    private BigDecimal price;

    /**
     * product name
     */
    @Column(name = "item_name", unique = true, columnDefinition = "varchar(200) not null comment 'product name'")
    private String name;

    /**
     * description
     * </p>
     */
    @Column(name = "description", columnDefinition = "varchar(2000) not null comment 'product description'")
    private String description;

    /**
     * Stock number
     */
    @Column(name = "stock_number", columnDefinition = "varchar(2000) not null comment 'product stock number'")
    private String stockNumber;
    
    /**
     * Remark
     */
    @Column(name = "remarks", columnDefinition = "varchar(100) not null comment 'remarks'")
    private String remarks;

    @Column(name = "thumbnei_url", columnDefinition = "varchar(200) not null comment 'thumbnei url'")
    private String thumbneiUrl;

    @Transient
    private List<ProductCarousel> carousels;

    /**
     * product enable flag
     * <ul>
     * <li>0: Normal
     * <li>1: product is locked
     * <li>2: product is disabled
     * </ul>
     */
    @Column(name = "STATUS", columnDefinition="char(1) not null default '0' comment 'Normal:0 / Locked:1 / Disabled: 2'")
    private String status;

    /**
     * Created time
     */
    @CreatedDate
    @Column(name = "created_date", updatable = false)
    @JsonIgnore // Ignore this field when generate to Json
    private Date created;

    /**
     * Updated time
     */
    @LastModifiedDate
    @Column(name = "updated_date")
    @JsonFormat(pattern="yyyy-MM-dd HH:mm:ss")
    private Date updated;

}