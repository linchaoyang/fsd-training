<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>fsd.msservice</groupId>
		<artifactId>fsd-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../fsd-parent</relativePath> <!-- lookup parent from repository -->
	</parent>
	<artifactId>fsd-eureka</artifactId>
	<name>eureka</name>
	<description>Eureka server</description>

	<dependencies>
		<!-- 
		<dependency> <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-eureka-server</artifactId> 
			<version>1.4.7.RELEASE</version>
		</dependency>
		-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- 
			<plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/docker</outputDirectory>
                            <resources>
                                <resource>
                                	<directory>src/main/docker</directory>
                                	<filtering>true</filtering>
                                </resource>
                                <resource>
                                	<targetPath>lib</targetPath>
                                	<directory>lib</directory>
                                	<include>**/*.jar</include>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
             -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
					<imageName>${docker.repository.name}</imageName>
					<imageTags>
                        <imageTag>latest</imageTag>
                    </imageTags>
					<!-- Copy docker file to ${project.build.directory}/docker -->
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
			                <targetPath>/</targetPath>
			             	<directory>${project.build.directory}</directory>
			             	<include>${project.build.finalName}.jar</include>
			           	</resource>
					</resources>
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					
				</configuration>
				<executions>
					<!-- remove previous image before build -->
					<!-- 
                    <execution>
                        <id>remove-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>removeImage</goal>
                        </goals>
                        <configuration>
                            <imageName>${docker.image}</imageName>
                        </configuration>
                    </execution>
                     -->
                    <execution>
                        <id>remove-tag-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>removeImage</goal>
                        </goals>
                        <configuration>
                            <imageName>${docker.repository.name}</imageName>
                            <imageTags>
                                <imageTag>latest</imageTag>
                            </imageTags>
                        </configuration>
                    </execution>
                    <!-- build image -->
                    <!-- 
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<imageName>${docker.image}</imageName>
						</configuration>
						
					</execution>
					 -->
					<!-- tag image -->
					<!--
					<execution>
						<id>tag-image</id>
						<phase>package</phase>
						<goals>
							<goal>tag</goal>
						</goals>
						<configuration>
							<image>${docker.image}</image>
							<newName>${docker.repository.name}:latest</newName>
						</configuration>
					</execution>
					 -->
					<!-- push image -->
					<execution>
						<id>push-image</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<configuration>
							<imageName>${docker.repository.name}:latest</imageName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>

</project>
