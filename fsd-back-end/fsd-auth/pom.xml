<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>fsd.msservice</groupId>
		<artifactId>fsd-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../fsd-parent</relativePath> <!-- lookup parent from repository -->
	</parent>
	<artifactId>fsd-auth</artifactId>
	<name>Auth</name>
	<description>Auth service</description>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>docker</id>
			<properties>
				<spring.profiles.active>docker</spring.profiles.active>
			</properties>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>fsd.msservice</groupId>
			<artifactId>fsd-common</artifactId>
			<version>${fsd.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>application*.yml</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application.yml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>application-${spring.profiles.active}.yml</include>
				</includes>
			</resource>
		</resources>
		
		<plugins>
			<!-- 
		
			<plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/classes</outputDirectory>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                            	<delimiter>#</delimiter>
                            </delimiters>
                            <resources>
                            	<resource>
                                	<directory>src/main/resources/</directory>
                                	<filtering>false</filtering>
                                	<excludes>
                                		<exclude>application*.yml</exclude>
                                	</excludes>
                                </resource>
                                <resource>
                                	<directory>src/main/resources/</directory>
                                	<filtering>true</filtering>
                                	<includes>
                                		<include>application.yml</include>
                                	</includes>
                                </resource>
                                <resource>
                                	<directory>src/main/resources</directory>
                                	<filtering>false</filtering>
                                	<includes>
                                		<include>application-${spring.profiles.active}.yml</include>
                                	</includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
             -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
					<imageName>${docker.repository.name}</imageName>
					<imageTags>
                        <imageTag>latest</imageTag>
                    </imageTags>
					<!-- Copy docker file to ${project.build.directory}/docker -->
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
			                <targetPath>/</targetPath>
			             	<directory>${project.build.directory}</directory>
			             	<include>${project.build.finalName}.jar</include>
			           	</resource>
					</resources>
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					
				</configuration>
				<executions>
					<!-- remove previous image before build -->
					<execution>
                        <id>remove-tag-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>removeImage</goal>
                        </goals>
                        <configuration>
                            <imageName>${docker.repository.name}</imageName>
                            <imageTags>
                                <imageTag>latest</imageTag>
                            </imageTags>
                        </configuration>
                    </execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>