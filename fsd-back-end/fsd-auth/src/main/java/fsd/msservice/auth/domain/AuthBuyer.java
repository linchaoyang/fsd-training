package fsd.msservice.auth.domain;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Data;
import lombok.NoArgsConstructor;

@Table(name = "buyer")
@Entity
@Data
@NoArgsConstructor
public class AuthBuyer {

	/**
	 * User id which is generated by database
	 */
	@Id
	@Column(name = "ID")
	private String id;

	/**
	 * Login User name
	 */
	@Column(name = "USERNAME")
	@NotNull
	private String username;

	/**
	 * Password
	 * <p>
	 * encrpted by BCryptPasswordEncoder
	 * </p>
	 */
	@Column(name = "PASSWORD")
	@JsonIgnore // Ignore this field when generate to Json
	private String password;

	@Column(name = "EXPIRE_DATE")
	@Temporal(TemporalType.TIMESTAMP)
	@JsonIgnore // Ignore this field when generate to Json
	private Date expireDate;

	/**
	 * Many-To-Many mapping user and role
	 */
	@ManyToMany(cascade = { CascadeType.MERGE, }, fetch = FetchType.EAGER) // cascade = { CascadeType.PERSIST,
																			// CascadeType.MERGE, },
	@JoinTable(name = "buyer_brole", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private List<AuthBuyerRole> roles;

}